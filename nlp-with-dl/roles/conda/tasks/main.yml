- name: Get installer
  get_url: url=https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh dest=/tmp/ mode=755

# - name: Start with clean slate
#   file: 
#     path: "{{ item }}"
#     state: absent
#   with_items:
#     - /miniconda

- name: Execute installer
  shell: /tmp/Miniconda3-latest-Linux-x86_64.sh -b -p /miniconda creates=/miniconda/bin executable=/bin/bash

- name: Copy environment specs
  template: src=environment.yml dest=/tmp/ mode=755

- name: Create virtual conda environment
  shell: "/miniconda/bin/conda env create -f /tmp/environment.yml -p /miniconda/envs/{{ conda_environment_name }}"
  args:
    creates: "/miniconda/envs/{{ conda_environment_name }}"

- name: Download english small spacy defs
  shell: "/miniconda/envs/{{ conda_environment_name }}/bin/python -m spacy download en_core_web_sm"

- name: Download english medium spacy defs
  shell: "/miniconda/envs/{{ conda_environment_name }}/bin/python -m spacy download en_core_web_md"

- name: create config and data dir
  file: 
    path: "{{ item }}"
    state: directory
    mode: 0777
  with_items:
    - "{{ root_folder }}"
    - "/miniconda/envs/{{ conda_environment_name }}/.jupyter"
    - "{{ logs_folder }}"

- name: Get course materials
  unarchive:
    src: https://storage.googleapis.com/godatadriven-academy-trainings-data/nlp-with-dl.tar.gz
    remote_src: yes
    mode: "777"
    dest: "{{ root_folder }}"
    creates: "{{ notebook_folder }}"

- name: Configure jupyter notebook
  template: 
    src: jupyter_notebook_config.py 
    dest: "/miniconda/envs/{{ conda_environment_name }}/.jupyter/"
    mode: 0755

- name: Copy jupyter start script
  template: 
    src: start-jupyter.sh
    dest: "/miniconda/envs/{{ conda_environment_name }}"
    mode: 0775

- name: install deeplearning package
  shell: "/miniconda/envs/{{ conda_environment_name }}/bin/pip install -e {{ notebook_folder }}/"

- name: fix tensorflow imdb load bug
  lineinfile:
    dest: "/miniconda/envs/{{ conda_environment_name }}/lib/python3.6/site-packages/keras/datasets/imdb.py"
    state: present
    regexp: '^    with np\.load\(path\) as f:'
    line: "    with np.load(path, allow_pickle=True) as f:"

- name: Stop jupyter
  shell: pkill jupyter
  ignore_errors: yes

- name: Start jupyter
  become: no
  shell: "nohup /miniconda/envs/{{ conda_environment_name }}/start-jupyter.sh >> {{ logs_folder }}/jupyter.log &"
