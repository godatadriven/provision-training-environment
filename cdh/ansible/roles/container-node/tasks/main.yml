---
- name: Create container node instance(s) in Zone A
  when: node_count_zone_a is defined
  local_action:
    module: ec2
    key_name: "{{ key_name }}"
    instance_type: "{{ instance_type }}"
    image: "{{ ami }}"
    region: "{{ region }}"
    vpc_subnet_id: "{{ subnet_id_a }}"
    volumes: "{{ node_volumes }}"
    wait: no
    monitoring: no
    assign_public_ip: yes
    group_id: 
      - "{{ outboundtraffic_group.group_id }}"
      - "{{ cdh_cluster_group.group_id }}"
      - "{{ cdh_cluster_internode_group.group_id }}"
    instance_tags:
      Name: "cdh-cluster-node"
    count_tag:
      Name: "cdh-cluster-node"
    exact_count: "{{ node_count_zone_a }}"
  register: container_nodes_zonea

- name: Create container node instance(s) in Zone B
  when: node_count_zone_b is defined
  local_action:
    module: ec2
    key_name: "{{ key_name }}"
    instance_type: "{{ instance_type }}"
    image: "{{ ami }}"
    region: "{{ region }}"
    vpc_subnet_id: "{{ subnet_id_b }}"
    volumes: "{{ node_volumes }}"
    wait: no
    monitoring: no
    assign_public_ip: yes
    group_id: 
      - "{{ outboundtraffic_group.group_id }}"
      - "{{ cdh_cluster_group.group_id }}"
      - "{{ cdh_cluster_internode_group.group_id }}"
    instance_tags:
      Name: "cdh-cluster-node"
    count_tag:
      Name: "cdh-cluster-node"
    exact_count: "{{ node_count_zone_b }}"
  register: container_nodes_zoneb

- name: Create container node instance(s) in Zone C
  when: node_count_zone_c is defined
  local_action:
    module: ec2
    key_name: "{{ key_name }}"
    instance_type: "{{ instance_type }}"
    image: "{{ ami }}"
    region: "{{ region }}"
    vpc_subnet_id: "{{ subnet_id_c }}"
    volumes: "{{ node_volumes }}"
    wait: no
    monitoring: no
    assign_public_ip: yes
    group_id: 
      - "{{ outboundtraffic_group.group_id }}"
      - "{{ cdh_cluster_group.group_id }}"
      - "{{ cdh_cluster_internode_group.group_id }}"
    instance_tags:
      Name: "cdh-cluster-node"
    count_tag:
      Name: "cdh-cluster-node"
    exact_count: "{{ node_count_zone_c }}"
  register: container_nodes_zonec

- name: Set container variables
  set_fact:
    containers_zonea: "{{container_nodes_zonea.tagged_instances if 'tagged_instances' in container_nodes_zonea else None}}"
    containers_zoneb: "{{container_nodes_zoneb.tagged_instances if 'tagged_instances' in container_nodes_zoneb else None}}"
    containers_zonec: "{{container_nodes_zonec.tagged_instances if 'tagged_instances' in container_nodes_zonec else None}}"

- name: tag first node to be the master
  ec2_tag:
    region: "{{ region }}"
    resource: "{{ item.id }}"
    state: present
    tags:
      mysql: master
      cloudera: master
  with_items:
    - "{{ containers_zonea[0] }}"

- name: Wait for SSH on nodes
  when: '"public_ip" in item.1'
  wait_for: host={{ item.1.public_ip }} delay=15 port=22 state=started
  with_indexed_items:
  - "{{ containers_zonea }}"
  - "{{ containers_zoneb }}"
  - "{{ containers_zonec }}"
